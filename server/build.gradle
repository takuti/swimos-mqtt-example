apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'idea'

group = 'org.swimos'
idea.module.outputDir file("out/production/classes")
version = project.property('swim.version')

repositories {
  jcenter()
}

afterEvaluate {
  compileJava {
    options.compilerArgs = ['--module-path', classpath.asPath , '-Xlint:all']
    classpath = files()
    options.encoding = 'UTF-8'
    source = sourceSets.main.allJava
    sourceCompatibility = JavaVersion.VERSION_1_9
    targetCompatibility = JavaVersion.VERSION_1_9
  }
}

description = 'Code corresponding to the Ingress Bridges cookbook'
ext.moduleName = 'swim.basic'
mainClassName = 'swim.basic.BasicPlane'

repositories {
  maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
}

dependencies {
  api group: 'org.swimos', name: 'swim-api', version: version
  api group: 'org.swimos', name: 'swim-server', version: version
  api group: 'org.swimos', name: 'swim-client', version: version
  api group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.0.2'
  // JAX-B dependencies for JDK 9+
  implementation "javax.xml.bind:jaxb-api:2.3.1"
}

task runMqtt(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "swim.basic.mqtt.DataSourcePopulator"
}

task runBridge(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "swim.basic.mqtt.IngressBridge"
}

task runWarp(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "swim.basic.warp.SourcePlane"
}
